name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "32 18 * * 1"

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ python, cpp ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Packages (cpp)
        if: ${{ matrix.language == 'cpp' }}
        run: |
          sudo apt-get update
          sudo apt-get install --yes build-essential g++-10 gcc-10 libffi-dev libgl-dev libpoppler-qt5-dev libqt5svg5-dev libssl-dev pybind11-dev python3-dev qt5-default qt5-qmake qtchooser qtbase5-dev qtbase5-dev-tools qttools5-dev software-properties-common zlib1g-dev

      - name: Configure (cpp)
        if: ${{ matrix.language == 'cpp' }}
        run: |
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - > /usr/share/keyrings/kitware-archive-keyring.gpg \
          echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ bionic main' > /etc/apt/sources.list.d/kitware.list \
          apt-get update && apt-get install -y cmake
          git clone https://gitlab.com/inkscape/lib2geom.git
          cd lib2geom; git checkout 37876ed4; cd ..
          cmake -S lib2geom -DCMAKE_CXX_COMPILER=g++-10 -DCMAKE_C_COMPILER=gcc-10 -B build-lib2geom -GNinja -DCMAKE_INSTALL_PREFIX=$RUNNER_TEMP/install -D2GEOM_TESTING=OFF
          cmake --build build-lib2geom --target install
          git clone https://github.com/fmtlib/fmt.git
          cd fmt; git checkout 8.0.1; cd ..
          cmake -S fmt -B build-fmt -GNinja -DCMAKE_CXX_COMPILER=g++-10 -DCMAKE_C_COMPILER=gcc-10 -DCMAKE_INSTALL_PREFIX=$RUNNER_TEMP/install
          cmake --build build-fmt --target install
          cmake -S . -B build -DBUILD_TRANSLATION=OFF -DUSE_QT_5_12=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=g++-10 -DCMAKE_C_COMPILER=gcc-10 -DCMAKE_INSTALL_PREFIX=$RUNNER_TEMP/install -DCMAKE_PREFIX_PATH=$RUNNER_TEMP/install

      - name: After Prepare (python)
        if: ${{ matrix.language == 'python' }}
        run: export PATH=$RUNNER_TEMP/tools:$PATH && echo "PATH=$PATH" >> $GITHUB_ENV

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
        if: ${{ matrix.language == 'python' }}

      - name: Build cpp
        if: ${{ matrix.language == 'cpp' }}
        run: |
          cd build
          make

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{ matrix.language }}"
